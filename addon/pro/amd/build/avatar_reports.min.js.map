{
    "version": 3,
    "file": "avatar_reports.min.js",
    "sources": [
        "../src/avatar_reports.js"
    ],
    "sourcesContent": [
        "define([\r\n    \"jquery\",\r\n    \"core/modal_factory\",\r\n    \"core/modal_events\",\r\n    \"core/fragment\",\r\n    \"core/ajax\",\r\n    \"core/notification\",\r\n    \"core/str\",\r\n], ($, ModalFactory, ModalEvents, Fragment, Ajax, Notification, Str) => {\r\n\r\n    var SELECTORS = {\r\n        ASSIGN_AVATAR_BTN: '.avatar-assign-btn',\r\n        UPGRADE_AVATAR_BTN: 'table#avatar_report td a.avatar-upgrade-btn',\r\n        usageItem: 'table#avatar_report td a.usage-items',\r\n    };\r\n\r\n\r\n    /**\r\n     * Initialize the modal\r\n     *\r\n     * @param {int} cmid Course module ID\r\n     * @param {int} userid User ID\r\n     * @return {Promise}\r\n     */\r\n    var assignAvatar = (cmid, userid) => {\r\n\r\n        return ModalFactory.create(\r\n            {\r\n                type: ModalFactory.types.DEFAULT,\r\n                title: Str.get_string(\"assignnewavatar\", \"mod_avatar\"),\r\n                body: Fragment.loadFragment(\"avataraddon_pro\", \"available_avatars\", 1, { cmid: cmid, userid: userid }),\r\n                large: true,\r\n            }\r\n        ).then((modal) => {\r\n            modal.show();\r\n            // Handle form submission.\r\n            modal.getRoot().on(\"click\", \".assign-avatar-btn\", (e) => {\r\n                e.preventDefault()\r\n                var form = e.currentTarget.querySelector(\"form\");\r\n\r\n                // Assign the avatar for the user.\r\n                Ajax.call([\r\n                    {\r\n                        methodname: \"mod_avatar_collect_avatar\",\r\n                        args: {\r\n                            avatarid: form.querySelector('input[name=\"avatarid\"]')?.value,\r\n                            cmid: cmid,\r\n                            userid: userid,\r\n                        },\r\n                        done: (response) => {\r\n                            if (response.success) {\r\n                                // Reload page to show updated avatar\r\n                                window.location.reload()\r\n                            } else {\r\n                                Notification.addNotification({\r\n                                    message: response.message,\r\n                                    type: \"error\",\r\n                                })\r\n                            }\r\n                        },\r\n                        fail: Notification.exception,\r\n                    },\r\n                ])\r\n            });\r\n\r\n            modal.getRoot().on('click', '.upgrade-avatar-btn', (e) => {\r\n                e.preventDefault()\r\n                var form = e.currentTarget.querySelector(\"form\");\r\n                // Upgrade the avatar for the user.\r\n                Ajax.call([\r\n                    {\r\n                        methodname: \"mod_avatar_upgrade_avatar\",\r\n                        args: {\r\n                            avatarid: form.querySelector('input[name=\"avatarid\"]')?.value,\r\n                            cmid: cmid,\r\n                            userid: userid,\r\n                        },\r\n                        done: (response) => {\r\n                            if (response.success) {\r\n                                // Reload page to show updated avatar\r\n                                window.location.reload()\r\n                            } else {\r\n                                Notification.addNotification({\r\n                                    message: response.message,\r\n                                    type: \"error\",\r\n                                })\r\n                            }\r\n                        },\r\n                        fail: Notification.exception,\r\n                    },\r\n                ])\r\n            });\r\n\r\n            return modal\r\n        })\r\n    }\r\n\r\n\r\n    var loadUsage = (type, avatarid) => {\r\n\r\n        return ModalFactory.create(\r\n            {\r\n                type: ModalFactory.types.DEFAULT,\r\n                title: Str.get_string(\"avatarusage\", \"mod_avatar\"),\r\n                body: Fragment.loadFragment(\"mod_avatar\", \"avatar_usage\", 1, { cmid: cmid, userid: userid }),\r\n                large: true,\r\n            }\r\n        ).then((modal) => {\r\n            modal.show();\r\n        })\r\n\r\n    }\r\n\r\n\r\n    var init = (cmid) => {\r\n\r\n        // Handle avatar assignment.\r\n        document.querySelectorAll(SELECTORS.ASSIGN_AVATAR_BTN)?.forEach((assignBTN) => {\r\n            assignBTN.addEventListener('click', (e) => {\r\n                e.preventDefault();\r\n                var userid = e.currentTarget.dataset.userid;\r\n                assignAvatar(cmid, userid);\r\n            });\r\n        });\r\n\r\n        /* document.querySelectorAll(SELECTORS.usageItem)?.forEach((usage) => {\r\n            var avatarid = usage.dataset.avatarid;\r\n            var type = usage.dataset.type;\r\n            loadUsage(type, avatarid);\r\n        }) */\r\n\r\n        // Upgrade the avatar on click.\r\n        document.querySelector(SELECTORS.UPGRADE_AVATAR_BTN)?.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n            var userid = e.currentTarget.dataset.userid;\r\n            var avatarid = e.currentTarget.dataset.avatarid;\r\n\r\n            // Upgrade the avatar for the user.\r\n            Ajax.call([\r\n                {\r\n                    methodname: \"mod_avatar_upgrade_avatar\",\r\n                    args: {\r\n                        avatarid: avatarid,\r\n                        cmid: cmid,\r\n                        userid: userid,\r\n                    },\r\n                    done: (response) => {\r\n                        if (response.success) {\r\n                            // Reload page to show updated avatar.\r\n                            window.location.reload()\r\n                        } else {\r\n                            Notification.addNotification({\r\n                                message: response.message,\r\n                                type: \"error\",\r\n                            })\r\n                        }\r\n                    },\r\n                    fail: Notification.exception,\r\n                },\r\n            ])\r\n        });\r\n\r\n    }\r\n\r\n    return {\r\n        init: init,\r\n    }\r\n})\r\n"
    ],
    "names": [
        "define",
        "$",
        "ModalFactory",
        "ModalEvents",
        "Fragment",
        "Ajax",
        "Notification",
        "Str",
        "SELECTORS",
        "init",
        "cmid",
        "document",
        "querySelectorAll",
        "forEach",
        "assignBTN",
        "addEventListener",
        "e",
        "preventDefault",
        "userid",
        "currentTarget",
        "dataset",
        "create",
        "type",
        "types",
        "DEFAULT",
        "title",
        "get_string",
        "body",
        "loadFragment",
        "large",
        "then",
        "modal",
        "show",
        "getRoot",
        "on",
        "form",
        "querySelector",
        "call",
        "methodname",
        "args",
        "avatarid",
        "_form$querySelector",
        "value",
        "done",
        "response",
        "success",
        "window",
        "location",
        "reload",
        "addNotification",
        "message",
        "fail",
        "exception",
        "_form$querySelector2",
        "assignAvatar"
    ],
    "mappings": "AAAAA,wCAAO,CACH,SACA,qBACA,oBACA,gBACA,YACA,oBACA,aACD,CAACC,EAAGC,aAAcC,YAAaC,SAAUC,KAAMC,aAAcC,WAExDC,4BACmB,qBADnBA,6BAEoB,oDAwJjB,CACHC,KAnDQC,sFAGRC,SAASC,iBAAiBJ,qFAA8BK,SAASC,YAC7DA,UAAUC,iBAAiB,SAAUC,IACjCA,EAAEC,qBACEC,OAASF,EAAEG,cAAcC,QAAQF,OAhG9B,EAACR,KAAMQ,UAEfhB,aAAamB,OAChB,CACIC,KAAMpB,aAAaqB,MAAMC,QACzBC,MAAOlB,IAAImB,WAAW,kBAAmB,cACzCC,KAAMvB,SAASwB,aAAa,aAAc,oBAAqB,EAAG,CAAElB,KAAMA,KAAMQ,OAAQA,SACxFW,OAAO,IAEbC,MAAMC,QACJA,MAAMC,OAEND,MAAME,UAAUC,GAAG,QAAS,sBAAuBlB,4BAC/CA,EAAEC,qBACEkB,KAAOnB,EAAEG,cAAciB,cAAc,QAGzC/B,KAAKgC,KAAK,CACN,CACIC,WAAY,4BACZC,KAAM,CACFC,qCAAUL,KAAKC,cAAc,gEAAnBK,oBAA8CC,MACxDhC,KAAMA,KACNQ,OAAQA,QAEZyB,KAAOC,WACCA,SAASC,QAETC,OAAOC,SAASC,SAEhB1C,aAAa2C,gBAAgB,CACzBC,QAASN,SAASM,QAClB5B,KAAM,WAIlB6B,KAAM7C,aAAa8C,gBAK/BrB,MAAME,UAAUC,GAAG,QAAS,uBAAwBlB,6BAChDA,EAAEC,qBACEkB,KAAOnB,EAAEG,cAAciB,cAAc,QAEzC/B,KAAKgC,KAAK,CACN,CACIC,WAAY,4BACZC,KAAM,CACFC,sCAAUL,KAAKC,cAAc,iEAAnBiB,qBAA8CX,MACxDhC,KAAMA,KACNQ,OAAQA,QAEZyB,KAAOC,WACCA,SAASC,QAETC,OAAOC,SAASC,SAEhB1C,aAAa2C,gBAAgB,CACzBC,QAASN,SAASM,QAClB5B,KAAM,WAIlB6B,KAAM7C,aAAa8C,gBAKxBrB,UA4BHuB,CAAa5C,KAAMQ,6CAW3BP,SAASyB,cAAc5B,wFAA+BO,iBAAiB,SAAUC,IAC7EA,EAAEC,qBACEC,OAASF,EAAEG,cAAcC,QAAQF,OACjCsB,SAAWxB,EAAEG,cAAcC,QAAQoB,SAGvCnC,KAAKgC,KAAK,CACN,CACIC,WAAY,4BACZC,KAAM,CACFC,SAAUA,SACV9B,KAAMA,KACNQ,OAAQA,QAEZyB,KAAOC,WACCA,SAASC,QAETC,OAAOC,SAASC,SAEhB1C,aAAa2C,gBAAgB,CACzBC,QAASN,SAASM,QAClB5B,KAAM,WAIlB6B,KAAM7C,aAAa8C"
}
