{"version":3,"file":"avatar_assign.min.js","sources":["../src/avatar_assign.js"],"sourcesContent":["define([\n    \"jquery\",\n    \"core/modal_factory\",\n    \"core/modal_events\",\n    \"core/fragment\",\n    \"core/ajax\",\n    \"core/notification\",\n    \"core/str\",\n], ($, ModalFactory, ModalEvents, Fragment, Ajax, Notification, Str) => {\n\n    var SELECTORS = {\n        ASSIGN_AVATAR_BTN: '.avatar-assign-btn',\n        UPGRADE_AVATAR_BTN: 'table#avatar_report td a.avatar-upgrade-btn',\n    };\n\n\n    /**\n     * Initialize the modal\n     *\n     * @param {int} cmid Course module ID\n     * @param {int} userid User ID\n     * @return {Promise}\n     */\n    var assignAvatar = (cmid, userid) => {\n        // Load the modal fragment.\n        return ModalFactory.create(\n            {\n                type: ModalFactory.types.DEFAULT,\n                title: Str.get_string(\"assignnewavatar\", \"mod_avatar\"),\n                body: Fragment.loadFragment(\"mod_avatar\", \"available_avatars\", 1, {cmid: cmid, userid: userid}),\n                large: true,\n            }\n        ).then((modal) => {\n            modal.show();\n            // Handle form submission\n            modal.getRoot().on(\"click\", \".assign-avatar-btn\", (e) => {\n                e.preventDefault();\n                var form = e.currentTarget.querySelector(\"form\");\n                // Submit form via AJAX\n                Ajax.call([\n                    {\n                        methodname: \"mod_avatar_collect_avatar\",\n                        args: {\n                            avatarid: form.querySelector('input[name=\"avatarid\"]')?.value,\n                            cmid: cmid,\n                            userid: userid,\n                        },\n                        done: (response) => {\n                            if (response.success) {\n                                // Reload page to show updated avatar\n                                window.location.reload();\n                            } else {\n                                Notification.addNotification({\n                                    message: response.message,\n                                    type: \"error\",\n                                });\n                            }\n                        },\n                        fail: Notification.exception,\n                    },\n                ]);\n            });\n\n            modal.getRoot().on('click', '.upgrade-avatar-btn', (e) => {\n                e.preventDefault();\n                var form = e.currentTarget.querySelector(\"form\");\n                // Submit form via AJAX\n                Ajax.call([\n                    {\n                        methodname: \"mod_avatar_upgrade_avatar\",\n                        args: {\n                            avatarid: form.querySelector('input[name=\"avatarid\"]')?.value,\n                            cmid: cmid,\n                            userid: userid,\n                        },\n                        done: (response) => {\n                            if (response.success) {\n                                // Reload page to show updated avatar\n                                window.location.reload();\n                            } else {\n                                Notification.addNotification({\n                                    message: response.message,\n                                    type: \"error\",\n                                });\n                            }\n                        },\n                        fail: Notification.exception,\n                    },\n                ]);\n            });\n\n            return modal;\n        });\n    };\n\n    var init = (cmid) => {\n\n        // Handle avatar assignment\n        document.querySelector(SELECTORS.ASSIGN_AVATAR_BTN)?.addEventListener('click', (e) => {\n            e.preventDefault();\n            var userid = e.currentTarget.dataset.userid;\n            assignAvatar(cmid, userid);\n        });\n\n        // Upgrade the avatar on click.\n        document.querySelector(SELECTORS.UPGRADE_AVATAR_BTN)?.addEventListener('click', (e) => {\n            e.preventDefault();\n            var userid = e.currentTarget.dataset.userid;\n            var avatarid = e.currentTarget.dataset.avatarid;\n\n            // Submit form via AJAX\n            Ajax.call([\n                {\n                    methodname: \"mod_avatar_upgrade_avatar\",\n                    args: {\n                        avatarid: avatarid,\n                        cmid: cmid,\n                        userid: userid,\n                    },\n                    done: (response) => {\n                        if (response.success) {\n                            // Reload page to show updated avatar\n                            window.location.reload();\n                        } else {\n                            Notification.addNotification({\n                                message: response.message,\n                                type: \"error\",\n                            });\n                        }\n                    },\n                    fail: Notification.exception,\n                },\n            ]);\n        });\n    };\n\n    var pickAvatar = function() {\n\n        const selector = '.collect-avatar, .upgrade-avatar';\n\n        document.querySelectorAll(selector)?.forEach(\n            (element) => element.addEventListener('click', function(e) {\n                e.preventDefault();\n\n                var avatarId = e.currentTarget.dataset.avatarid;\n                var cmid = e.currentTarget.dataset.cmid;\n\n                var action = e.currentTarget.classList.contains('collect-avatar') ? 'collect' : 'upgrade';\n                var methodName = action === 'collect' ? 'mod_avatar_collect_avatar' : 'mod_avatar_upgrade_avatar';\n\n                Ajax.call([{\n                    methodname: methodName,\n                    args: {avatarid: avatarId, cmid: cmid},\n                    done: function(response) {\n                        Notification.addNotification({\n                            message: response.message,\n                            type: response.success ? 'success' : 'error'\n                        });\n                        if (response.success) {\n                            window.location.reload();\n                        }\n                    },\n                    fail: Notification.exception\n                }]);\n            })\n        );\n    };\n\n    return {\n        init: init,\n        pickAvatar: pickAvatar,\n    };\n});\n"],"names":["define","$","ModalFactory","ModalEvents","Fragment","Ajax","Notification","Str","SELECTORS","init","cmid","document","querySelector","addEventListener","e","preventDefault","userid","currentTarget","dataset","create","type","types","DEFAULT","title","get_string","body","loadFragment","large","then","modal","show","getRoot","on","form","call","methodname","args","avatarid","_form$querySelector","value","done","response","success","window","location","reload","addNotification","message","fail","exception","_form$querySelector2","assignAvatar","pickAvatar","querySelectorAll","forEach","element","avatarId","methodName","classList","contains"],"mappings":"AAAAA,kCAAO,CACH,SACA,qBACA,oBACA,gBACA,YACA,oBACA,aACD,CAACC,EAAGC,aAAcC,YAAaC,SAAUC,KAAMC,aAAcC,WAExDC,4BACmB,qBADnBA,6BAEoB,oDA4JjB,CACHC,KA1EQC,sFAGRC,SAASC,cAAcJ,qFAA8BK,iBAAiB,SAAUC,IAC5EA,EAAEC,qBACEC,OAASF,EAAEG,cAAcC,QAAQF,OA7E1B,EAACN,KAAMM,UAEfd,aAAaiB,OAChB,CACIC,KAAMlB,aAAamB,MAAMC,QACzBC,MAAOhB,IAAIiB,WAAW,kBAAmB,cACzCC,KAAMrB,SAASsB,aAAa,aAAc,oBAAqB,EAAG,CAAChB,KAAMA,KAAMM,OAAQA,SACvFW,OAAO,IAEbC,MAAMC,QACJA,MAAMC,OAEND,MAAME,UAAUC,GAAG,QAAS,sBAAuBlB,4BAC/CA,EAAEC,qBACEkB,KAAOnB,EAAEG,cAAcL,cAAc,QAEzCP,KAAK6B,KAAK,CACN,CACIC,WAAY,4BACZC,KAAM,CACFC,qCAAUJ,KAAKrB,cAAc,gEAAnB0B,oBAA8CC,MACxD7B,KAAMA,KACNM,OAAQA,QAEZwB,KAAOC,WACCA,SAASC,QAETC,OAAOC,SAASC,SAEhBvC,aAAawC,gBAAgB,CACzBC,QAASN,SAASM,QAClB3B,KAAM,WAIlB4B,KAAM1C,aAAa2C,gBAK/BpB,MAAME,UAAUC,GAAG,QAAS,uBAAwBlB,6BAChDA,EAAEC,qBACEkB,KAAOnB,EAAEG,cAAcL,cAAc,QAEzCP,KAAK6B,KAAK,CACN,CACIC,WAAY,4BACZC,KAAM,CACFC,sCAAUJ,KAAKrB,cAAc,iEAAnBsC,qBAA8CX,MACxD7B,KAAMA,KACNM,OAAQA,QAEZwB,KAAOC,WACCA,SAASC,QAETC,OAAOC,SAASC,SAEhBvC,aAAawC,gBAAgB,CACzBC,QAASN,SAASM,QAClB3B,KAAM,WAIlB4B,KAAM1C,aAAa2C,gBAKxBpB,UAUPsB,CAAazC,KAAMM,0CAIvBL,SAASC,cAAcJ,wFAA+BK,iBAAiB,SAAUC,IAC7EA,EAAEC,qBACEC,OAASF,EAAEG,cAAcC,QAAQF,OACjCqB,SAAWvB,EAAEG,cAAcC,QAAQmB,SAGvChC,KAAK6B,KAAK,CACN,CACIC,WAAY,4BACZC,KAAM,CACFC,SAAUA,SACV3B,KAAMA,KACNM,OAAQA,QAEZwB,KAAOC,WACCA,SAASC,QAETC,OAAOC,SAASC,SAEhBvC,aAAawC,gBAAgB,CACzBC,QAASN,SAASM,QAClB3B,KAAM,WAIlB4B,KAAM1C,aAAa2C,iBAwC/BG,WAlCa,qEAIbzC,SAAS0C,iBAFQ,8FAEoBC,SAChCC,SAAYA,QAAQ1C,iBAAiB,SAAS,SAASC,GACpDA,EAAEC,qBAEEyC,SAAW1C,EAAEG,cAAcC,QAAQmB,SACnC3B,KAAOI,EAAEG,cAAcC,QAAQR,KAG/B+C,WAAwB,aADf3C,EAAEG,cAAcyC,UAAUC,SAAS,kBAAoB,UAAY,WACxC,4BAA8B,4BAEtEtD,KAAK6B,KAAK,CAAC,CACPC,WAAYsB,WACZrB,KAAM,CAACC,SAAUmB,SAAU9C,KAAMA,MACjC8B,KAAM,SAASC,UACXnC,aAAawC,gBAAgB,CACzBC,QAASN,SAASM,QAClB3B,KAAMqB,SAASC,QAAU,UAAY,UAErCD,SAASC,SACTC,OAAOC,SAASC,UAGxBG,KAAM1C,aAAa2C"}